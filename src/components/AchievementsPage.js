// src/components/AchievementsPage.jsx
import React, { useEffect } from 'react';
import confetti from 'canvas-confetti';
import './AchievementsPage.css';

const AchievementsPage = ({ language, user }) => {
  const achievements = [
    { id: 'first_quiz', icon: 'ЁЯПЖ', title: { en: 'First Quiz Completed', ta: 'роорпБродро▓рпН ро╡ро┐ройро╛ роорпБроЯро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ' } },
    { id: 'perfect_score', icon: 'ЁЯТп', title: { en: 'Perfect Score', ta: 'роорпБро┤рпБ роородро┐рокрпНрокрпЖрогрпН' } },
    { id: 'streak_3', icon: 'ЁЯФе', title: { en: '3 Correct in a Row', ta: 'роорпВройрпНро▒рпБ родрпКроЯро░рпНроЪрпНроЪро┐ропро╛рой роЪро░ро┐ропро╛рой рокродро┐ро▓рпНроХро│рпН' } },
    { id: '100_points', icon: 'тнР', title: { en: '100 Points Earned', ta: '100 рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒рпНро▒родрпБ' } },
    { id: '500_points', icon: 'ЁЯМЯ', title: { en: '500 Points Earned', ta: '500 рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒рпНро▒родрпБ' } },
    { id: 'quiz_master', icon: 'ЁЯСС', title: { en: 'Quiz Master', ta: 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН' } },
  ];

  // Check for newly unlocked achievements and trigger confetti
  useEffect(() => {
    // This would normally come from props or state tracking new achievements
    // For now, we'll just check if the user has any achievements
    if (user.achievements.length > 0) {
      // Check if the perfect_score achievement was recently unlocked
      if (user.achievements.includes('perfect_score')) {
        confetti({
          particleCount: 150,
          spread: 70,
          origin: { y: 0.6 },
          colors: ['#FFD700', '#FFA500', '#FF8C00', '#FF7F50', '#FF6347'],
          shapes: ['star'],
          gravity: 0.8,
          drift: 1,
        });
      }
    }
  }, [user.achievements]);

  return (
    <div className="page-content achievements-page">
      <h2>{language === 'English' ? 'Achievements' : 'роЪро╛родройрпИроХро│рпН'}</h2>
      
      <div className="achievements-intro">
        <p>{language === 'English' 
          ? 'Complete challenges to earn achievements and showcase your quiz mastery!' 
          : 'роЪро╛родройрпИроХро│рпИрокрпН рокрпЖро▒рпБро╡родро▒рпНроХрпБроорпН роЙроЩрпНроХро│рпН ро╡ро┐ройро╛ родро┐ро▒роорпИропрпИроХрпН роХро╛роЯрпНроЯрпБро╡родро▒рпНроХрпБроорпН роЪро╡ро╛ро▓рпНроХро│рпИ роорпБроЯро┐роХрпНроХро╡рпБроорпН!'}</p>
      </div>
      
      <div className="achievements-grid">
        {achievements.map(achievement => {
          const isUnlocked = user.achievements.includes(achievement.id);
          
          return (
            <div 
              key={achievement.id} 
              className={`achievement-card ${isUnlocked ? 'unlocked' : 'locked'}`}
            >
              <div className="achievement-icon">{achievement.icon}</div>
              <div className="achievement-title">
                {language === 'English' 
                  ? achievement.title.en 
                  : achievement.title.ta}
              </div>
              <div className="achievement-status">
                {isUnlocked 
                  ? (language === 'English' ? 'Unlocked' : 'родро┐ро▒роХрпНроХрокрпНрокроЯрпНроЯродрпБ') 
                  : (language === 'English' ? 'Locked' : 'рокрпВроЯрпНроЯрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ')}
              </div>
            </div>
          );
        })}
      </div>
      
      {user.achievements.length === 0 && (
        <div className="achievements-empty">
          <p>{language === 'English' 
            ? 'You haven\'t unlocked any achievements yet. Start taking quizzes to earn them!' 
            : 'роирпАроЩрпНроХро│рпН роЗродрпБро╡ро░рпИ роОроирпНродроЪрпН роЪро╛родройрпИропрпИропрпБроорпН родро┐ро▒роХрпНроХро╡ро┐ро▓рпНро▓рпИ. роЕро╡ро▒рпНро▒рпИрокрпН рокрпЖро▒ ро╡ро┐ройро╛роХрпНроХро│рпИ роОроЯрпБроХрпНроХродрпН родрпКроЯроЩрпНроХро╡рпБроорпН!'}</p>
        </div>
      )}
    </div>
  );
};

export default AchievementsPage;
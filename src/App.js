
// src/App.js
import React, { useState, useEffect } from 'react';
import './App.css';
import reportWebVitals from './reportWebVitals';
import QuizSetup from './components/QuizSetup';
import Quiz from './components/Quiz';
import QuizResults from './components/QuizResults';
import FunFacts from './components/FunFacts';



function App() {
  const [language, setLanguage] = useState('English');
  const [selectedLevel, setSelectedLevel] = useState(null);
  const [activePage, setActivePage] = useState('home');
  const [quizSettings, setQuizSettings] = useState(null);
  const [quizResults, setQuizResults] = useState(null);
  const [userProfile, setUserProfile] = useState({
    username: 'QuizUser123',
    memberSince: 'Jan 2025',
    totalPoints: 1250,
    totalQuizzes: 24,
    averageScore: 78,
    achievements: 5
  });

  const toggleLanguage = () => {
    setLanguage(language === 'English' ? 'Tamil' : 'English');
  };

  {/*const levels = [
    { id: 'beginner', name: { English: 'Beginner', Tamil: 'родрпКроЯроХрпНроХ' }, color: '#4CAF50', icon: 'ЁЯМ▒', grade: 'Grades 6-7' },
    { id: 'intermediate', name: { English: 'Intermediate', Tamil: 'роЗроЯрпИроиро┐ро▓рпИ' }, color: '#2196F3', icon: 'ЁЯЪА', grade: 'Grades 8-10' },
    { id: 'advanced', name: { English: 'Advanced', Tamil: 'роорпЗроорпНрокроЯрпНроЯ' }, color: '#9C27B0', icon: 'ЁЯПЖ', grade: 'Grades 11-12' }
  ];*/}
  const levels = [
  {
    id: 'beginner',
    name: { English: 'Beginner', Tamil: 'родрпКроЯроХрпНроХ' },
    color: '#4CAF50',
    icon: 'ЁЯМ▒',
    grade: { English: 'Grades 6-7', Tamil: '6-7роЖроорпН ро╡роХрпБрокрпНрокрпБ' }
  },
  {
    id: 'intermediate',
    name: { English: 'Intermediate', Tamil: 'роЗроЯрпИроиро┐ро▓рпИ' },
    color: '#2196F3',
    icon: 'ЁЯЪА',
    grade: { English: 'Grades 8-10', Tamil: '8-10роЖроорпН ро╡роХрпБрокрпНрокрпБ' }
  },
  {
    id: 'advanced',
    name: { English: 'Advanced', Tamil: 'роорпЗроорпНрокроЯрпНроЯ' },
    color: '#9C27B0',
    icon: 'ЁЯПЖ',
    grade: { English: 'Grades 11-12', Tamil: '11-12роЖроорпН ро╡роХрпБрокрпНрокрпБ' }
  }
];

  const handleLevelSelect = (level) => {
    setSelectedLevel(level);
    setQuizSettings({
      language,
      level: level.id,
      numberOfQuestions: 10
    });
    setActivePage('quizSetup');
  };

  const handleStartQuiz = (numberOfQuestions,subject,grade) => {
    setQuizSettings({
      ...quizSettings,
      numberOfQuestions,
      subject,
      grade
    });
    setActivePage('quiz');
  };

  const handleQuizComplete = (results) => {
    setQuizResults(results);
    setActivePage('results');
    
    // Update user profile
    const pointsEarned = results.correctAnswers * 10;
    setUserProfile(prev => ({
      ...prev,
      totalPoints: prev.totalPoints + pointsEarned,
      totalQuizzes: prev.totalQuizzes + 1,
      averageScore: Math.round((prev.averageScore * prev.totalQuizzes + 
        (results.correctAnswers / results.totalQuestions) * 100) / (prev.totalQuizzes + 1))
    }));
  };

  const handleRestartQuiz = () => {
    setActivePage('quiz');
  };

  const handleBackToHome = () => {
    setActivePage('home');
    setSelectedLevel(null);
    setQuizResults(null);
  };

  const handleFeatureCardClick = (feature) => {
    // Handle feature card clicks
    if (feature === 'profile') {
      setActivePage('profile');
    } else if (feature === 'help') {
      setActivePage('help');
    }
  };

  useEffect(() => {
    document.title = language === 'English' ? 'Quiz Master' : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН';
  }, [language]);

  const renderPageContent = () => {
    switch(activePage) {
      case 'home':
        return (
          <>
            <div className="quiz-header">
              <h1>{language === 'English' ? 'Quiz Master' : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН'}</h1>
              <p>{language === 'English' ? 'Test your knowledge!' : 'роЙроЩрпНроХро│рпН роЕро▒ро┐ро╡рпИ роЪрпЛродро┐роХрпНроХро╡рпБроорпН!'}</p>
            </div>
            
            <div className="level-selection">
              <h2>{language === 'English' ? 'Select Difficulty Level' : 'роЪро┐ро░роо роиро┐ро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН'}</h2>
              <div className="level-buttons">
                {levels.map((level) => (
                  <button
                    key={level.id}
                    className="level-btn"
                    style={{ backgroundColor: level.color }}
                    onClick={() => handleLevelSelect(level)}
                  >
                    <span className="level-icon">{level.icon}</span>
                    <span className="level-name">{level.name[language]}</span>
                    <span className="level-grade">{level.grade[language]}</span>
                  </button>
                ))}
              </div>
            </div>
            
           {/*} <div className="features">
              <div className="feature-card" onClick={() => handleFeatureCardClick('profile')}>
                <div className="icon">ЁЯПЖ</div>
                <h3>{language === 'English' ? 'Earn Points' : 'рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒рпБроЩрпНроХро│рпН'}</h3>
                <p>{language === 'English' ? 'Track your progress' : 'роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН'}</p>
              </div>
              <div className="feature-card" onClick={() => handleFeatureCardClick('help')}>
                <div className="icon">ЁЯМН</div>
                <h3>{language === 'English' ? 'Bilingual Support' : 'роЗро░рпБроорпКро┤ро┐ роЖродро░ро╡рпБ'}</h3>
                <p>{language === 'English' ? 'Seamless language switching' : 'роЪрпАро░ро╛рой роорпКро┤ро┐ рооро╛ро▒рпНро▒роорпН'}</p>
              </div>
              <div className="feature-card" onClick={() => handleFeatureCardClick('profile')}>
                <div className="icon">ЁЯУК</div>
                <h3>{language === 'English' ? 'Progress Tracking' : 'роорпБройрпНройрпЗро▒рпНро▒роХрпН роХрогрпНроХро╛рогро┐рокрпНрокрпБ'}</h3>
                <p>{language === 'English' ? 'Monitor your improvement' : 'роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН'}</p>
              </div>
            </div>*/}

           <div className="extra-features">
  <h2>{language === 'English' ? 'More Features' : 'роХрпВроЯрпБродро▓рпН роЕроорпНроЪроЩрпНроХро│рпН'}</h2>
  <div className="feature-buttons">
    <button onClick={() => setActivePage('achievements')} className="feature-btn">ЁЯПЕ {language === 'English' ? 'Achievements' : 'роЪро╛родройрпИроХро│рпН'}</button>
    <button onClick={() => setActivePage('leaderboard')} className="feature-btn">ЁЯУК {language === 'English' ? 'Leaderboard' : 'роорпБройрпНройрогро┐ рокроЯрпНроЯро┐ропро▓рпН'}</button>
    <button onClick={() => setActivePage('funFacts')} className="feature-btn">ЁЯТб {language === 'English' ? 'Fun Facts' : 'роЪрпБро╡ро╛ро░ро╕рпНропроЩрпНроХро│рпН'}</button>

  </div>
</div>

          </>
        );
      case 'about':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'About Us' : 'роОроЩрпНроХро│рпИрокрпН рокро▒рпНро▒ро┐'}</h2>
            <p>
              {language === 'English' 
                ? 'ЁЯЪА Quiz Master makes learning fun! We bring science alive through interactive quizzes in Tamil & English, helping every student learn with joy and confidence.'
                : 'ЁЯЪАро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН роХро▒рпНро▒ро▓рпИ роЪрпБро╡ро╛ро░ро╕рпНропрооро╛роХрпНроХрпБроХро┐ро▒родрпБ! роЕро▒ро┐ро╡ро┐ропро▓рпИ родрооро┐ро┤рпН & роЖроЩрпНроХро┐ро▓роорпН ро╡ро┤ро┐ропро╛роХ ро╡ро┐ро│рпИропро╛роЯрпНроЯрпБрокрпН рокро╛рогро┐ропро┐ро▓рпН роХро▒рпНро▒рпБродрпНродро░рпБроХро┐ро▒родрпБ, роТро╡рпНро╡рпКро░рпБ рооро╛рогро╡ро░рпБроорпН роороХро┐ро┤рпНроЪрпНроЪро┐ропрпБроЯройрпН роироорпНрокро┐роХрпНроХрпИропрпБроЯройрпН роХро▒рпНроХ роЙродро╡рпБроХро┐ро▒родрпБ.'}
            </p>
          </div>
        );
      case 'contact':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Contact Us' : 'роОроЩрпНроХро│рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│'}</h2>
            <p>
              {language === 'English' 
                ? 'Email: science@quizmaster.com'
                : 'рооро┐ройрпНройроЮрпНроЪро▓рпН: science@quizmaster.com'}
            </p>
            <p>
              {language === 'English' 
                ? 'Phone: 91+ 7823047037'
                : 'родрпКро▓рпИрокрпЗроЪро┐:  91+ 7823047037'}
            </p>
            <p>
              {language === 'English' 
                ? 'Address:R.M.K. ENGINEERING COLLEGE'
                : 'роорпБроХро╡ро░ро┐: роЖро░рпН.роОроорпН.роХрпЗ. рокрпКро▒ро┐ропро┐ропро▓рпН роХро▓рпНро▓рпВро░ро┐'}
            </p>
          </div>
        );
      case 'help':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Help & Support' : 'роЙродро╡ро┐ рооро▒рпНро▒рпБроорпН роЖродро░ро╡рпБ'}</h2>
            <p>
              {language === 'English' 
                ? '1. Select your preferred difficulty level to start a quiz.'
                : '1. ро╡ро┐ройро╛родрпНродро┐роЯрпНроЯродрпНродрпИродрпН родрпКроЯроЩрпНроХ роЙроЩрпНроХро│рпБроХрпНроХрпБ ро╡ро┐ро░рпБрокрпНрокрооро╛рой роЪро┐ро░роо роиро┐ро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН.'}
            </p>
            <p>
              {language === 'English' 
                ? '2. Answer questions to earn points and track your progress.'
                : '2. рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒ро╡рпБроорпН роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН роХрпЗро│рпНро╡ро┐роХро│рпБроХрпНроХрпБ рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН.'}
            </p>
            <p>
              {language === 'English' 
                ? '3. Switch between languages using the toggle in the navigation bar.'
                : '3. ро╡ро┤ро┐роЪрпЖро▓рпБродрпНродро▓рпН рокроЯрпНроЯро┐ропро┐ро▓рпН роЙро│рпНро│ роЯрпЛроХро┐ро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ роорпКро┤ро┐роХро│рпБроХрпНроХрпБ роЗроЯрпИропрпЗ рооро╛ро▒ро╡рпБроорпН.'}
            </p>
          </div>
        );
      case 'profile':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'User Profile' : 'рокропройро░рпН роЪрпБропро╡ро┐ро╡ро░роорпН'}</h2>
            <div className="profile-info">
              <div className="profile-avatar">ЁЯСд</div>
              <div className="profile-details">
                <p><strong>{language === 'English' ? 'Username:' : 'рокропройро░рпНрокрпЖропро░рпН:'}</strong> {userProfile.username}</p>
                <p><strong>{language === 'English' ? 'Member Since:' : 'роЙро▒рпБрокрпНрокро┐ройро░рпН роорпБродро▓рпН:'}</strong> {userProfile.memberSince}</p>
                <p><strong>{language === 'English' ? 'Total Points:' : 'роорпКродрпНрод рокрпБро│рпНро│ро┐роХро│рпН:'}</strong> {userProfile.totalPoints}</p>
              </div>
            </div>
            <div className="profile-stats">
              <h3>{language === 'English' ? 'Quiz Statistics' : 'ро╡ро┐ройро╛ рокрпБро│рпНро│ро┐ро╡ро┐ро╡ро░роЩрпНроХро│рпН'}</h3>
              <div className="stats-grid">
                <div className="stat-item">
                  <div className="stat-value">{userProfile.totalQuizzes}</div>
                  <div className="stat-label">{language === 'English' ? 'Quizzes Taken' : 'роОроЯрпБродрпНрод ро╡ро┐ройро╛роХрпНроХро│рпН'}</div>
                </div>
                <div className="stat-item">
                  <div className="stat-value">{userProfile.averageScore}%</div>
                  <div className="stat-label">{language === 'English' ? 'Average Score' : 'роЪро░ро╛роЪро░ро┐ роородро┐рокрпНрокрпЖрогрпН'}</div>
                </div>
                <div className="stat-item">
                  <div className="stat-value">{userProfile.achievements}</div>
                  <div className="stat-label">{language === 'English' ? 'Achievements' : 'роЪро╛родройрпИроХро│рпН'}</div>
                </div>
              </div>
            </div>
          </div>
        );
              case 'profile':
        return (
          <div className="page-content">
            ...
          </div>
        );

      // тмЗя╕П Paste here
      case 'achievements':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Achievements' : 'роЪро╛родройрпИроХро│рпН'}</h2>
            <ul>
              <li>ЁЯПЖ {language === 'English' ? 'First Quiz Completed' : 'роорпБродро▓рпН ро╡ро┐ройро╛ роорпБроЯро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ'}</li>
              <li>ЁЯФе {language === 'English' ? '3 Correct Answers in a Row' : 'роорпВройрпНро▒рпБ родрпКроЯро░рпНроЪрпНроЪро┐ропро╛рой роЪро░ро┐ропро╛рой рокродро┐ро▓рпНроХро│рпН'}</li>
              <li>ЁЯТп {language === 'English' ? '100 Points Earned' : '100 рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒рпНро▒родрпБ'}</li>
            </ul>
          </div>
        );

      case 'leaderboard':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Leaderboard' : 'роорпБройрпНройрогро┐ рокроЯрпНроЯро┐ропро▓рпН'}</h2>
            <ol>
              <li>ЁЯСС User1 тАУ 2500 pts</li>
              <li>ЁЯеИ User2 тАУ 2000 pts</li>
              <li>ЁЯеЙ User3 тАУ 1800 pts</li>
            </ol>
          </div>
        );

     /*case 'funFacts':
  return (
    <div className="page-content">
      <h2>{language === 'English' ? 'Fun Science Facts' : 'роЕро▒ро┐ро╡ро┐ропро▓рпН роЪрпБро╡ро╛ро░ро╕рпНропроЩрпНроХро│рпН'}</h2>
      <ul>
        <li>ЁЯМН {language === 'English' ? 'Bananas are berries, but strawberries are not!' : 'ро╡ро╛ро┤рпИрокрпНрокро┤роорпН рокрпЗро░ро┐роХрпНроХро╛ропрпН, роЖройро╛ро▓рпН ро╕рпНроЯрпНро░ро╛рокрпЖро░ро┐ роЕро▓рпНро▓!'}</li>
        <li>тЪб {language === 'English' ? 'Lightning is five times hotter than the SunтАЩs surface.' : 'рооро┐ройрпНройро▓рпН роЪрпВро░ро┐ропройрпН роорпЗро▒рпНрокро░рокрпНрокрпИ ро╡ро┐роЯ роРроирпНродрпБ роороЯроЩрпНроХрпБ роЪрпВроЯро╛ройродрпБ.'}</li>
        <li>ЁЯзм {language === 'English' ? 'Your DNA could stretch from the Earth to the Sun and back 600 times!' : 'роЙроЩрпНроХро│рпН роЯро┐.роОройрпН.роП. рокрпВрооро┐ропро┐ро▓ро┐ро░рпБроирпНродрпБ роЪрпВро░ро┐ропройрпН ро╡ро░рпИ роЪрпЖройрпНро▒рпБ 600 роорпБро▒рпИ родро┐ро░рпБроорпНрок роорпБроЯро┐ропрпБроорпН!'}</li>
      </ul>
    </div>
  );*/
case 'funFacts':
  return <FunFacts language={language} />;


      case 'quizSetup':
        return (
          <QuizSetup 
            language={language}
            level={selectedLevel.id}
            onStartQuiz={handleStartQuiz}
            onBack={handleBackToHome}
          />
        );
      case 'quiz':
        return (
          <Quiz 
            language={quizSettings.language}
            level={quizSettings.level}
            subject={quizSettings.subject}
            grade={quizSettings.grade}
            numberOfQuestions={quizSettings.numberOfQuestions}
            onQuizComplete={handleQuizComplete}
            onBack={handleBackToHome}
          />
        );
      case 'results':
        return (
          <QuizResults 
            results={quizResults}
            language={language}
            onRestart={handleRestartQuiz}
            onHome={handleBackToHome}
          />
        );
      default:
        return null;
    }
  };

  return (
    <div className="app-container">
      <nav className="navbar">
        <div className="nav-brand">
          <span className="brand-icon">ЁЯза</span>
          <span className="brand-name">  {language === 'English' ? 'Quiz Master' : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН'}</span>
        </div>

        <div className="nav-links">
          <button 
            className={`nav-link ${activePage === 'home' ? 'active' : ''}`}
            onClick={() => setActivePage('home')}
          >
            {language === 'English' ? 'Home' : 'роорпБроХрокрпНрокрпБ'}
          </button>
          <button 
            className={`nav-link ${activePage === 'about' ? 'active' : ''}`}
            onClick={() => setActivePage('about')}
          >
            {language === 'English' ? 'About Us' : 'роОроЩрпНроХро│рпИрокрпН рокро▒рпНро▒ро┐'}
          </button>
          <button 
            className={`nav-link ${activePage === 'contact' ? 'active' : ''}`}
            onClick={() => setActivePage('contact')}
          >
            {language === 'English' ? 'Contact' : 'родрпКроЯро░рпНрокрпБ'}
          </button>
          <button 
            className={`nav-link ${activePage === 'help' ? 'active' : ''}`}
            onClick={() => setActivePage('help')}
          >
            {language === 'English' ? 'Help' : 'роЙродро╡ро┐'}
          </button>
        </div>
        
        <div className="nav-actions">
          <button 
            className={`nav-link ${activePage === 'profile' ? 'active' : ''}`}
            onClick={() => setActivePage('profile')}
          >
            <span className="profile-icon">ЁЯСд</span>
            <span>{language === 'English' ? 'Profile' : 'роЪрпБропро╡ро┐ро╡ро░роорпН'}</span>
          </button>
          <button onClick={toggleLanguage} className="lang-btn">
            {language === 'English' ? 'родрооро┐ро┤рпН' : 'English'}
          </button>
        </div>
      </nav>
      
      <main className="main-content">
        {renderPageContent()}
      </main>
      
      <footer>
        <p>{language === 'English' ? '┬й 2025 Quiz Master App' : '┬й 2025 ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН рокропройрпНрокро╛роЯрпБ'}</p>
      </footer>
    </div>
  );
}

reportWebVitals();
export default App;

{"ast":null,"code":"import _objectSpread from\"D:/Users/Sinduja/Documents/Projects/QuizMaster/quiz-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/Quiz.js\nimport React,{useState,useEffect}from'react';import Popup from'./Popup';import{questions_tamil_beginner,questions_tamil_intermediate,questions_tamil_advanced,questions_english_beginner,questions_english_intermediate,questions_english_advanced}from'../data/index.js';import'./Quiz.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Quiz=_ref=>{let{language,level,numberOfQuestions,onQuizComplete,onBack}=_ref;const[quizQuestions,setQuizQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedOption,setSelectedOption]=useState(null);const[showFeedback,setShowFeedback]=useState(false);const[isCorrect,setIsCorrect]=useState(false);const[consecutiveCorrect,setConsecutiveCorrect]=useState(0);const[showCongrats,setShowCongrats]=useState(false);const[timeLeft,setTimeLeft]=useState(5);const[showStartPopup,setShowStartPopup]=useState(true);const[results,setResults]=useState({totalQuestions:0,correctAnswers:0,wrongAnswers:0});// Get the appropriate question set based on language and level\nconst getQuestionSet=()=>{if(language==='Tamil'){switch(level){case'beginner':return questions_tamil_beginner;case'intermediate':return questions_tamil_intermediate;case'advanced':return questions_tamil_advanced;default:return questions_tamil_beginner;}}else{switch(level){case'beginner':return questions_english_beginner;case'intermediate':return questions_english_intermediate;case'advanced':return questions_english_advanced;default:return questions_english_beginner;}}};// Select questions from the appropriate set\nuseEffect(()=>{const questionSet=getQuestionSet();// Shuffle and select the requested number of questions\nconst shuffled=[...questionSet].sort(()=>0.5-Math.random());const selected=shuffled.slice(0,numberOfQuestions);setQuizQuestions(selected);setResults({totalQuestions:numberOfQuestions,correctAnswers:0,wrongAnswers:0});},[language,level,numberOfQuestions]);// Timer for the start popup\nuseEffect(()=>{if(showStartPopup&&timeLeft>0){const timerId=setTimeout(()=>{setTimeLeft(timeLeft-1);},1000);return()=>clearTimeout(timerId);}else if(showStartPopup&&timeLeft===0){setShowStartPopup(false);}},[showStartPopup,timeLeft]);const handleOptionSelect=option=>{if(!showFeedback){setSelectedOption(option);}};const handleSubmit=()=>{if(selectedOption===null)return;const currentQuestion=quizQuestions[currentQuestionIndex];const correct=selectedOption===currentQuestion.correctOption;setIsCorrect(correct);setShowFeedback(true);// Update results\nconst updatedResults=_objectSpread(_objectSpread({},results),{},{correctAnswers:correct?results.correctAnswers+1:results.correctAnswers,wrongAnswers:!correct?results.wrongAnswers+1:results.wrongAnswers,totalQuestions:quizQuestions.length});// Handle consecutive correct answers\nif(correct){const newCount=consecutiveCorrect+1;setConsecutiveCorrect(newCount);if(newCount%3===0){setShowCongrats(true);setTimeout(()=>setShowCongrats(false),2000);}}else{setConsecutiveCorrect(0);}// ...existing code...\n/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:[\"option1\",\"option2\",\"option3\",\"option4\"].map((key,idx)=>{const isSelected=selectedOption===(idx+1).toString();const isCorrect=currentQuestion.correctOption===(idx+1).toString();return/*#__PURE__*/_jsxs(\"div\",{className:\"option\".concat(isSelected?\" selected\":\"\").concat(showFeedback&&isCorrect?\" correct\":\"\").concat(showFeedback&&isSelected&&!isCorrect?\" wrong\":\"\"),onClick:()=>!showFeedback&&setSelectedOption((idx+1).toString()),children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-label\",children:String.fromCharCode(65+idx)}),/*#__PURE__*/_jsx(\"span\",{className:\"option-text\",children:currentQuestion[key]})]},key);})});// ...existing code...\nsetTimeout(()=>{if(currentQuestionIndex<quizQuestions.length-1){setResults(updatedResults);setCurrentQuestionIndex(currentQuestionIndex+1);setSelectedOption(null);setShowFeedback(false);}else{setResults(updatedResults);onQuizComplete(updatedResults);}},1500);// ...existing code...\n};const getOptionClass=option=>{if(!showFeedback){return selectedOption===option?'selected':'';}if(option===quizQuestions[currentQuestionIndex].correctOption){return'correct';}if(selectedOption===option&&!isCorrect){return'wrong';}return'';};const currentQuestion=quizQuestions[currentQuestionIndex];if(quizQuestions.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-loading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:language==='English'?'Loading questions...':'கேள்விகள் ஏற்றப்படுகின்றன...'}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:onBack,children:language==='English'?'Back to Home':'முகப்பிற்குச் செல்ல'})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[showStartPopup&&/*#__PURE__*/_jsx(Popup,{message:language==='English'?'The Test is going to start in':'தேர்வு தொடங்குவதற்கு',timer:timeLeft,onClose:()=>setShowStartPopup(false)}),showCongrats&&/*#__PURE__*/_jsx(\"div\",{className:\"congrats-message\",children:language==='English'?\"Congratulations! \".concat(consecutiveCorrect,\" correct answers in a row!\"):\"\\u0BB5\\u0BBE\\u0BB4\\u0BCD\\u0BA4\\u0BCD\\u0BA4\\u0BC1\\u0B95\\u0BCD\\u0B95\\u0BB3\\u0BCD! \\u0BA4\\u0BCA\\u0B9F\\u0BB0\\u0BCD\\u0B9A\\u0BCD\\u0B9A\\u0BBF\\u0BAF\\u0BBE\\u0B95 \".concat(consecutiveCorrect,\" \\u0B9A\\u0BB0\\u0BBF\\u0BAF\\u0BBE\\u0BA9 \\u0BAA\\u0BA4\\u0BBF\\u0BB2\\u0BCD\\u0B95\\u0BB3\\u0BCD!\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-header\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"back-button\",onClick:onBack,children:[\"\\u2190 \",language==='English'?'Back':'திரும்ப']}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-progress\",children:[language==='English'?'Question':'கேள்வி',\" \",currentQuestionIndex+1,\" \",language==='English'?'of':'மொத்தம்',\" \",quizQuestions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-level\",children:[level==='beginner'&&'🟢',level==='intermediate'&&'🟡',level==='advanced'&&'🔴',level.charAt(0).toUpperCase()+level.slice(1)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"question-text\",children:currentQuestion.question}),/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:[\"option1\",\"option2\",\"option3\",\"option4\"].map((key,idx)=>{const isSelected=selectedOption===(idx+1).toString();const isCorrect=currentQuestion.correctOption===(idx+1).toString();return/*#__PURE__*/_jsxs(\"div\",{className:\"option\".concat(isSelected?\" selected\":\"\").concat(showFeedback&&isCorrect?\" correct\":\"\").concat(showFeedback&&isSelected&&!isCorrect?\" wrong\":\"\"),onClick:()=>!showFeedback&&setSelectedOption((idx+1).toString()),children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-label\",children:String.fromCharCode(65+idx)}),/*#__PURE__*/_jsx(\"span\",{className:\"option-text\",children:currentQuestion[key]})]},key);})}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",onClick:handleSubmit,disabled:selectedOption===null||showFeedback,children:language==='English'?'Submit Answer':'பதிலைச் சமர்ப்பிக்கவும்'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quiz-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"streak-counter\",children:[language==='English'?'Streak':'வரிசை',\": \",consecutiveCorrect]})})]});};export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","Popup","questions_tamil_beginner","questions_tamil_intermediate","questions_tamil_advanced","questions_english_beginner","questions_english_intermediate","questions_english_advanced","jsx","_jsx","jsxs","_jsxs","Quiz","_ref","language","level","numberOfQuestions","onQuizComplete","onBack","quizQuestions","setQuizQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","showFeedback","setShowFeedback","isCorrect","setIsCorrect","consecutiveCorrect","setConsecutiveCorrect","showCongrats","setShowCongrats","timeLeft","setTimeLeft","showStartPopup","setShowStartPopup","results","setResults","totalQuestions","correctAnswers","wrongAnswers","getQuestionSet","questionSet","shuffled","sort","Math","random","selected","slice","timerId","setTimeout","clearTimeout","handleOptionSelect","option","handleSubmit","currentQuestion","correct","correctOption","updatedResults","_objectSpread","length","newCount","className","children","map","key","idx","isSelected","toString","concat","onClick","String","fromCharCode","getOptionClass","message","timer","onClose","charAt","toUpperCase","question","disabled"],"sources":["D:/Users/Sinduja/Documents/Projects/QuizMaster/quiz-master/src/components/Quiz.js"],"sourcesContent":["// src/components/Quiz.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Popup from './Popup';\r\nimport {\r\n  questions_tamil_beginner,\r\n  questions_tamil_intermediate,\r\n  questions_tamil_advanced,\r\n  questions_english_beginner,\r\n  questions_english_intermediate,\r\n  questions_english_advanced\r\n} from '../data/index.js';\r\nimport './Quiz.css';\r\n\r\nconst Quiz = ({ language, level, numberOfQuestions, onQuizComplete, onBack }) => {\r\n  const [quizQuestions, setQuizQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [consecutiveCorrect, setConsecutiveCorrect] = useState(0);\r\n  const [showCongrats, setShowCongrats] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  const [showStartPopup, setShowStartPopup] = useState(true);\r\n  const [results, setResults] = useState({\r\n    totalQuestions: 0,\r\n    correctAnswers: 0,\r\n    wrongAnswers: 0\r\n  });\r\n\r\n  // Get the appropriate question set based on language and level\r\n  const getQuestionSet = () => {\r\n    if (language === 'Tamil') {\r\n      switch(level) {\r\n        case 'beginner': return questions_tamil_beginner;\r\n        case 'intermediate': return questions_tamil_intermediate;\r\n        case 'advanced': return questions_tamil_advanced;\r\n        default: return questions_tamil_beginner;\r\n      }\r\n    } else {\r\n      switch(level) {\r\n        case 'beginner': return questions_english_beginner;\r\n        case 'intermediate': return questions_english_intermediate;\r\n        case 'advanced': return questions_english_advanced;\r\n        default: return questions_english_beginner;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Select questions from the appropriate set\r\n  useEffect(() => {\r\n    const questionSet = getQuestionSet();\r\n    \r\n    // Shuffle and select the requested number of questions\r\n    const shuffled = [...questionSet].sort(() => 0.5 - Math.random());\r\n    const selected = shuffled.slice(0, numberOfQuestions);\r\n    \r\n    setQuizQuestions(selected);\r\n    setResults({\r\n      totalQuestions: numberOfQuestions,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0\r\n    });\r\n  }, [language, level, numberOfQuestions]);\r\n\r\n  // Timer for the start popup\r\n  useEffect(() => {\r\n    if (showStartPopup && timeLeft > 0) {\r\n      const timerId = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timerId);\r\n    } else if (showStartPopup && timeLeft === 0) {\r\n      setShowStartPopup(false);\r\n    }\r\n  }, [showStartPopup, timeLeft]);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    if (!showFeedback) {\r\n      setSelectedOption(option);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedOption === null) return;\r\n    \r\n    const currentQuestion = quizQuestions[currentQuestionIndex];\r\n    const correct = selectedOption === currentQuestion.correctOption;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    \r\n    // Update results\r\n     const updatedResults = {\r\n    ...results,\r\n    correctAnswers: correct ? results.correctAnswers + 1 : results.correctAnswers,\r\n    wrongAnswers: !correct ? results.wrongAnswers + 1 : results.wrongAnswers,\r\n    totalQuestions: quizQuestions.length\r\n  };\r\n    // Handle consecutive correct answers\r\n    if (correct) {\r\n      const newCount = consecutiveCorrect + 1;\r\n      setConsecutiveCorrect(newCount);\r\n      \r\n      if (newCount % 3 === 0) {\r\n        setShowCongrats(true);\r\n        setTimeout(() => setShowCongrats(false), 2000);\r\n      }\r\n    } else {\r\n      setConsecutiveCorrect(0);\r\n    }\r\n    // ...existing code...\r\n<div className=\"options-container\">\r\n  {[\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\r\n    const isSelected = selectedOption === (idx + 1).toString();\r\n    const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\r\n    return (\r\n      <div\r\n        key={key}\r\n        className={`option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`}\r\n        onClick={() => !showFeedback && setSelectedOption((idx + 1).toString())}\r\n      >\r\n        <span className=\"option-label\">{String.fromCharCode(65 + idx)}</span>\r\n        <span className=\"option-text\">{currentQuestion[key]}</span>\r\n      </div>\r\n    );\r\n  })}\r\n</div>\r\n// ...existing code...\r\n      setTimeout(() => {\r\n    if (currentQuestionIndex < quizQuestions.length - 1) {\r\n      setResults(updatedResults);\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedOption(null);\r\n      setShowFeedback(false);\r\n    } else {\r\n      setResults(updatedResults);\r\n      onQuizComplete(updatedResults);\r\n    }\r\n  }, 1500);\r\n\r\n\r\n// ...existing code...\r\n  };\r\n\r\n  const getOptionClass = (option) => {\r\n    if (!showFeedback) {\r\n      return selectedOption === option ? 'selected' : '';\r\n    }\r\n    \r\n    if (option === quizQuestions[currentQuestionIndex].correctOption) {\r\n      return 'correct';\r\n    }\r\n    \r\n    if (selectedOption === option && !isCorrect) {\r\n      return 'wrong';\r\n    }\r\n    \r\n    return '';\r\n  };\r\n\r\n  const currentQuestion = quizQuestions[currentQuestionIndex];\r\n\r\n  if (quizQuestions.length === 0) {\r\n    return (\r\n      <div className=\"quiz-loading\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>{language === 'English' ? 'Loading questions...' : 'கேள்விகள் ஏற்றப்படுகின்றன...'}</p>\r\n          <button className=\"back-button\" onClick={onBack}>\r\n            {language === 'English' ? 'Back to Home' : 'முகப்பிற்குச் செல்ல'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {showStartPopup && (\r\n        <Popup \r\n          message={\r\n            language === 'English' \r\n              ? 'The Test is going to start in' \r\n              : 'தேர்வு தொடங்குவதற்கு'\r\n          }\r\n          timer={timeLeft}\r\n          onClose={() => setShowStartPopup(false)}\r\n        />\r\n      )}\r\n      \r\n      {showCongrats && (\r\n        <div className=\"congrats-message\">\r\n          {language === 'English' \r\n            ? `Congratulations! ${consecutiveCorrect} correct answers in a row!` \r\n            : `வாழ்த்துக்கள்! தொடர்ச்சியாக ${consecutiveCorrect} சரியான பதில்கள்!`}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"quiz-header\">\r\n        <button className=\"back-button\" onClick={onBack}>\r\n          ← {language === 'English' ? 'Back' : 'திரும்ப'}\r\n        </button>\r\n        <div className=\"quiz-progress\">\r\n          {language === 'English' ? 'Question' : 'கேள்வி'} {currentQuestionIndex + 1} {language === 'English' ? 'of' : 'மொத்தம்'} {quizQuestions.length}\r\n        </div>\r\n        <div className=\"quiz-level\">\r\n          {level === 'beginner' && '🟢'}\r\n          {level === 'intermediate' && '🟡'}\r\n          {level === 'advanced' && '🔴'}\r\n          {level.charAt(0).toUpperCase() + level.slice(1)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"question-container\">\r\n        <h2 className=\"question-text\">{currentQuestion.question}</h2>\r\n        \r\n        <div className=\"options-container\">\r\n         \r\n  {[\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\r\n    const isSelected = selectedOption === (idx + 1).toString();\r\n    const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\r\n    return (\r\n      <div\r\n        key={key}\r\n        className={`option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`}\r\n        onClick={() => !showFeedback && setSelectedOption((idx + 1).toString())}\r\n      >\r\n        <span className=\"option-label\">{String.fromCharCode(65 + idx)}</span>\r\n        <span className=\"option-text\">{currentQuestion[key]}</span>\r\n      </div>\r\n    );\r\n  })}\r\n</div>\r\n        \r\n        \r\n        <button \r\n          className=\"submit-button\" \r\n          onClick={handleSubmit}\r\n          disabled={selectedOption === null || showFeedback}\r\n        >\r\n          {language === 'English' ? 'Submit Answer' : 'பதிலைச் சமர்ப்பிக்கவும்'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"quiz-footer\">\r\n        <div className=\"streak-counter\">\r\n          {language === 'English' ? 'Streak' : 'வரிசை'}: {consecutiveCorrect}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
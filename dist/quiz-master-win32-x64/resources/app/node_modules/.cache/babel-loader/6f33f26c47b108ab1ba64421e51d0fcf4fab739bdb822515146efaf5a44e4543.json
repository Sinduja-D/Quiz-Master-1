{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Sinduja\\\\Documents\\\\Projects\\\\QuizMaster\\\\quiz-master\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// src/components/Quiz.js\nimport React, { useState, useEffect } from 'react';\nimport Popup from './Popup';\nimport { questions_tamil_beginner, questions_tamil_intermediate, questions_tamil_advanced, questions_english_beginner, questions_english_intermediate, questions_english_advanced } from '../data/index.js';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  language,\n  level,\n  numberOfQuestions,\n  onQuizComplete,\n  onBack\n}) => {\n  _s();\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [consecutiveCorrect, setConsecutiveCorrect] = useState(0);\n  const [showCongrats, setShowCongrats] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [showStartPopup, setShowStartPopup] = useState(true);\n  const [results, setResults] = useState({\n    totalQuestions: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0\n  });\n\n  // Get the appropriate question set based on language and level\n  const getQuestionSet = () => {\n    if (language === 'Tamil') {\n      switch (level) {\n        case 'beginner':\n          return questions_tamil_beginner;\n        case 'intermediate':\n          return questions_tamil_intermediate;\n        case 'advanced':\n          return questions_tamil_advanced;\n        default:\n          return questions_tamil_beginner;\n      }\n    } else {\n      switch (level) {\n        case 'beginner':\n          return questions_english_beginner;\n        case 'intermediate':\n          return questions_english_intermediate;\n        case 'advanced':\n          return questions_english_advanced;\n        default:\n          return questions_english_beginner;\n      }\n    }\n  };\n\n  // Select questions from the appropriate set\n  useEffect(() => {\n    const questionSet = getQuestionSet();\n\n    // Shuffle and select the requested number of questions\n    const shuffled = [...questionSet].sort(() => 0.5 - Math.random());\n    const selected = shuffled.slice(0, numberOfQuestions);\n    setQuizQuestions(selected);\n    setResults({\n      totalQuestions: numberOfQuestions,\n      correctAnswers: 0,\n      wrongAnswers: 0\n    });\n  }, [language, level, numberOfQuestions]);\n\n  // Timer for the start popup\n  useEffect(() => {\n    if (showStartPopup && timeLeft > 0) {\n      const timerId = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    } else if (showStartPopup && timeLeft === 0) {\n      setShowStartPopup(false);\n    }\n  }, [showStartPopup, timeLeft]);\n  const handleOptionSelect = option => {\n    if (!showFeedback) {\n      setSelectedOption(option);\n    }\n  };\n  const handleSubmit = () => {\n    if (selectedOption === null) return;\n    const currentQuestion = quizQuestions[currentQuestionIndex];\n    const correct = selectedOption === currentQuestion.correctOption;\n    setIsCorrect(correct);\n    setShowFeedback(true);\n\n    // Update results\n    setResults(prev => ({\n      ...prev,\n      correctAnswers: correct ? prev.correctAnswers + 1 : prev.correctAnswers,\n      wrongAnswers: !correct ? prev.wrongAnswers + 1 : prev.wrongAnswers\n    }));\n\n    // Handle consecutive correct answers\n    if (correct) {\n      const newCount = consecutiveCorrect + 1;\n      setConsecutiveCorrect(newCount);\n      if (newCount % 3 === 0) {\n        setShowCongrats(true);\n        setTimeout(() => setShowCongrats(false), 2000);\n      }\n    } else {\n      setConsecutiveCorrect(0);\n    }\n    // ...existing code...\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\n        const isSelected = selectedOption === (idx + 1).toString();\n        const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`,\n          onClick: () => !showFeedback && setSelectedOption((idx + 1).toString()),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"option-label\",\n            children: String.fromCharCode(65 + idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"option-text\",\n            children: currentQuestion[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 1\n    }, this);\n    // ...existing code...\n\n    // Move to next question after delay\n    setTimeout(() => {\n      if (currentQuestionIndex < quizQuestions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedOption(null);\n        setShowFeedback(false);\n      } else {\n        // Quiz completed\n        onQuizComplete(results);\n      }\n    }, 1500);\n  };\n  const getOptionClass = option => {\n    if (!showFeedback) {\n      return selectedOption === option ? 'selected' : '';\n    }\n    if (option === quizQuestions[currentQuestionIndex].correctOption) {\n      return 'correct';\n    }\n    if (selectedOption === option && !isCorrect) {\n      return 'wrong';\n    }\n    return '';\n  };\n  const currentQuestion = quizQuestions[currentQuestionIndex];\n  if (quizQuestions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'English' ? 'Loading questions...' : 'роХрпЗро│рпНро╡ро┐роХро│рпН роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ройрпНро▒рой...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: onBack,\n          children: language === 'English' ? 'Back to Home' : 'роорпБроХрокрпНрокро┐ро▒рпНроХрпБроЪрпН роЪрпЖро▓рпНро▓'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [showStartPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      message: language === 'English' ? 'The Test is going to start in' : 'родрпЗро░рпНро╡рпБ родрпКроЯроЩрпНроХрпБро╡родро▒рпНроХрпБ',\n      timer: timeLeft,\n      onClose: () => setShowStartPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), showCongrats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"congrats-message\",\n      children: language === 'English' ? `Congratulations! ${consecutiveCorrect} correct answers in a row!` : `ро╡ро╛ро┤рпНродрпНродрпБроХрпНроХро│рпН! родрпКроЯро░рпНроЪрпНроЪро┐ропро╛роХ ${consecutiveCorrect} роЪро░ро┐ропро╛рой рокродро┐ро▓рпНроХро│рпН!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBack,\n        children: [\"\\u2190 \", language === 'English' ? 'Back' : 'родро┐ро░рпБроорпНрок']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-progress\",\n        children: [language === 'English' ? 'Question' : 'роХрпЗро│рпНро╡ро┐', \" \", currentQuestionIndex + 1, \" \", language === 'English' ? 'of' : 'роорпКродрпНродроорпН', \" \", quizQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-level\",\n        children: [level === 'beginner' && 'ЁЯЯв', level === 'intermediate' && 'ЁЯЯб', level === 'advanced' && 'ЁЯФ┤', level.charAt(0).toUpperCase() + level.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\n          const isSelected = selectedOption === (idx + 1).toString();\n          const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`,\n            onClick: () => !showFeedback && setSelectedOption((idx + 1).toString()),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-label\",\n              children: String.fromCharCode(65 + idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-text\",\n              children: currentQuestion[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 9\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        disabled: selectedOption === null || showFeedback,\n        children: language === 'English' ? 'Submit Answer' : 'рокродро┐ро▓рпИроЪрпН роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"streak-counter\",\n        children: [language === 'English' ? 'Streak' : 'ро╡ро░ро┐роЪрпИ', \": \", consecutiveCorrect]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"gVeYGV2Ab1WFL/xJ8LzhOfxE6+s=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Popup","questions_tamil_beginner","questions_tamil_intermediate","questions_tamil_advanced","questions_english_beginner","questions_english_intermediate","questions_english_advanced","jsxDEV","_jsxDEV","Quiz","language","level","numberOfQuestions","onQuizComplete","onBack","_s","quizQuestions","setQuizQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","showFeedback","setShowFeedback","isCorrect","setIsCorrect","consecutiveCorrect","setConsecutiveCorrect","showCongrats","setShowCongrats","timeLeft","setTimeLeft","showStartPopup","setShowStartPopup","results","setResults","totalQuestions","correctAnswers","wrongAnswers","getQuestionSet","questionSet","shuffled","sort","Math","random","selected","slice","timerId","setTimeout","clearTimeout","handleOptionSelect","option","handleSubmit","currentQuestion","correct","correctOption","prev","newCount","className","children","map","key","idx","isSelected","toString","onClick","String","fromCharCode","fileName","_jsxFileName","lineNumber","columnNumber","length","getOptionClass","message","timer","onClose","charAt","toUpperCase","question","disabled","_c","$RefreshReg$"],"sources":["D:/Users/Sinduja/Documents/Projects/QuizMaster/quiz-master/src/components/Quiz.js"],"sourcesContent":["// src/components/Quiz.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Popup from './Popup';\r\nimport {\r\n  questions_tamil_beginner,\r\n  questions_tamil_intermediate,\r\n  questions_tamil_advanced,\r\n  questions_english_beginner,\r\n  questions_english_intermediate,\r\n  questions_english_advanced\r\n} from '../data/index.js';\r\nimport './Quiz.css';\r\n\r\nconst Quiz = ({ language, level, numberOfQuestions, onQuizComplete, onBack }) => {\r\n  const [quizQuestions, setQuizQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [consecutiveCorrect, setConsecutiveCorrect] = useState(0);\r\n  const [showCongrats, setShowCongrats] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  const [showStartPopup, setShowStartPopup] = useState(true);\r\n  const [results, setResults] = useState({\r\n    totalQuestions: 0,\r\n    correctAnswers: 0,\r\n    wrongAnswers: 0\r\n  });\r\n\r\n  // Get the appropriate question set based on language and level\r\n  const getQuestionSet = () => {\r\n    if (language === 'Tamil') {\r\n      switch(level) {\r\n        case 'beginner': return questions_tamil_beginner;\r\n        case 'intermediate': return questions_tamil_intermediate;\r\n        case 'advanced': return questions_tamil_advanced;\r\n        default: return questions_tamil_beginner;\r\n      }\r\n    } else {\r\n      switch(level) {\r\n        case 'beginner': return questions_english_beginner;\r\n        case 'intermediate': return questions_english_intermediate;\r\n        case 'advanced': return questions_english_advanced;\r\n        default: return questions_english_beginner;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Select questions from the appropriate set\r\n  useEffect(() => {\r\n    const questionSet = getQuestionSet();\r\n    \r\n    // Shuffle and select the requested number of questions\r\n    const shuffled = [...questionSet].sort(() => 0.5 - Math.random());\r\n    const selected = shuffled.slice(0, numberOfQuestions);\r\n    \r\n    setQuizQuestions(selected);\r\n    setResults({\r\n      totalQuestions: numberOfQuestions,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0\r\n    });\r\n  }, [language, level, numberOfQuestions]);\r\n\r\n  // Timer for the start popup\r\n  useEffect(() => {\r\n    if (showStartPopup && timeLeft > 0) {\r\n      const timerId = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timerId);\r\n    } else if (showStartPopup && timeLeft === 0) {\r\n      setShowStartPopup(false);\r\n    }\r\n  }, [showStartPopup, timeLeft]);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    if (!showFeedback) {\r\n      setSelectedOption(option);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedOption === null) return;\r\n    \r\n    const currentQuestion = quizQuestions[currentQuestionIndex];\r\n    const correct = selectedOption === currentQuestion.correctOption;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    \r\n    // Update results\r\n    setResults(prev => ({\r\n      ...prev,\r\n      correctAnswers: correct ? prev.correctAnswers + 1 : prev.correctAnswers,\r\n      wrongAnswers: !correct ? prev.wrongAnswers + 1 : prev.wrongAnswers\r\n    }));\r\n    \r\n    // Handle consecutive correct answers\r\n    if (correct) {\r\n      const newCount = consecutiveCorrect + 1;\r\n      setConsecutiveCorrect(newCount);\r\n      \r\n      if (newCount % 3 === 0) {\r\n        setShowCongrats(true);\r\n        setTimeout(() => setShowCongrats(false), 2000);\r\n      }\r\n    } else {\r\n      setConsecutiveCorrect(0);\r\n    }\r\n    // ...existing code...\r\n<div className=\"options-container\">\r\n  {[\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\r\n    const isSelected = selectedOption === (idx + 1).toString();\r\n    const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\r\n    return (\r\n      <div\r\n        key={key}\r\n        className={`option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`}\r\n        onClick={() => !showFeedback && setSelectedOption((idx + 1).toString())}\r\n      >\r\n        <span className=\"option-label\">{String.fromCharCode(65 + idx)}</span>\r\n        <span className=\"option-text\">{currentQuestion[key]}</span>\r\n      </div>\r\n    );\r\n  })}\r\n</div>\r\n// ...existing code...\r\n    \r\n    // Move to next question after delay\r\n    setTimeout(() => {\r\n      if (currentQuestionIndex < quizQuestions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        setSelectedOption(null);\r\n        setShowFeedback(false);\r\n      } else {\r\n        // Quiz completed\r\n        onQuizComplete(results);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const getOptionClass = (option) => {\r\n    if (!showFeedback) {\r\n      return selectedOption === option ? 'selected' : '';\r\n    }\r\n    \r\n    if (option === quizQuestions[currentQuestionIndex].correctOption) {\r\n      return 'correct';\r\n    }\r\n    \r\n    if (selectedOption === option && !isCorrect) {\r\n      return 'wrong';\r\n    }\r\n    \r\n    return '';\r\n  };\r\n\r\n  const currentQuestion = quizQuestions[currentQuestionIndex];\r\n\r\n  if (quizQuestions.length === 0) {\r\n    return (\r\n      <div className=\"quiz-loading\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>{language === 'English' ? 'Loading questions...' : 'роХрпЗро│рпНро╡ро┐роХро│рпН роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ройрпНро▒рой...'}</p>\r\n          <button className=\"back-button\" onClick={onBack}>\r\n            {language === 'English' ? 'Back to Home' : 'роорпБроХрокрпНрокро┐ро▒рпНроХрпБроЪрпН роЪрпЖро▓рпНро▓'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {showStartPopup && (\r\n        <Popup \r\n          message={\r\n            language === 'English' \r\n              ? 'The Test is going to start in' \r\n              : 'родрпЗро░рпНро╡рпБ родрпКроЯроЩрпНроХрпБро╡родро▒рпНроХрпБ'\r\n          }\r\n          timer={timeLeft}\r\n          onClose={() => setShowStartPopup(false)}\r\n        />\r\n      )}\r\n      \r\n      {showCongrats && (\r\n        <div className=\"congrats-message\">\r\n          {language === 'English' \r\n            ? `Congratulations! ${consecutiveCorrect} correct answers in a row!` \r\n            : `ро╡ро╛ро┤рпНродрпНродрпБроХрпНроХро│рпН! родрпКроЯро░рпНроЪрпНроЪро┐ропро╛роХ ${consecutiveCorrect} роЪро░ро┐ропро╛рой рокродро┐ро▓рпНроХро│рпН!`}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"quiz-header\">\r\n        <button className=\"back-button\" onClick={onBack}>\r\n          тЖР {language === 'English' ? 'Back' : 'родро┐ро░рпБроорпНрок'}\r\n        </button>\r\n        <div className=\"quiz-progress\">\r\n          {language === 'English' ? 'Question' : 'роХрпЗро│рпНро╡ро┐'} {currentQuestionIndex + 1} {language === 'English' ? 'of' : 'роорпКродрпНродроорпН'} {quizQuestions.length}\r\n        </div>\r\n        <div className=\"quiz-level\">\r\n          {level === 'beginner' && 'ЁЯЯв'}\r\n          {level === 'intermediate' && 'ЁЯЯб'}\r\n          {level === 'advanced' && 'ЁЯФ┤'}\r\n          {level.charAt(0).toUpperCase() + level.slice(1)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"question-container\">\r\n        <h2 className=\"question-text\">{currentQuestion.question}</h2>\r\n        \r\n        <div className=\"options-container\">\r\n         \r\n  {[\"option1\", \"option2\", \"option3\", \"option4\"].map((key, idx) => {\r\n    const isSelected = selectedOption === (idx + 1).toString();\r\n    const isCorrect = currentQuestion.correctOption === (idx + 1).toString();\r\n    return (\r\n      <div\r\n        key={key}\r\n        className={`option${isSelected ? \" selected\" : \"\"}${showFeedback && isCorrect ? \" correct\" : \"\"}${showFeedback && isSelected && !isCorrect ? \" wrong\" : \"\"}`}\r\n        onClick={() => !showFeedback && setSelectedOption((idx + 1).toString())}\r\n      >\r\n        <span className=\"option-label\">{String.fromCharCode(65 + idx)}</span>\r\n        <span className=\"option-text\">{currentQuestion[key]}</span>\r\n      </div>\r\n    );\r\n  })}\r\n</div>\r\n        \r\n        \r\n        <button \r\n          className=\"submit-button\" \r\n          onClick={handleSubmit}\r\n          disabled={selectedOption === null || showFeedback}\r\n        >\r\n          {language === 'English' ? 'Submit Answer' : 'рокродро┐ро▓рпИроЪрпН роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"quiz-footer\">\r\n        <div className=\"streak-counter\">\r\n          {language === 'English' ? 'Streak' : 'ро╡ро░ро┐роЪрпИ'}: {consecutiveCorrect}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SACEC,wBAAwB,EACxBC,4BAA4B,EAC5BC,wBAAwB,EACxBC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,0BAA0B,QACrB,kBAAkB;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,iBAAiB;EAAEC,cAAc;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC;IACrCsC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,CAAC;IACjBC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI7B,QAAQ,KAAK,OAAO,EAAE;MACxB,QAAOC,KAAK;QACV,KAAK,UAAU;UAAE,OAAOV,wBAAwB;QAChD,KAAK,cAAc;UAAE,OAAOC,4BAA4B;QACxD,KAAK,UAAU;UAAE,OAAOC,wBAAwB;QAChD;UAAS,OAAOF,wBAAwB;MAC1C;IACF,CAAC,MAAM;MACL,QAAOU,KAAK;QACV,KAAK,UAAU;UAAE,OAAOP,0BAA0B;QAClD,KAAK,cAAc;UAAE,OAAOC,8BAA8B;QAC1D,KAAK,UAAU;UAAE,OAAOC,0BAA0B;QAClD;UAAS,OAAOF,0BAA0B;MAC5C;IACF;EACF,CAAC;;EAED;EACAL,SAAS,CAAC,MAAM;IACd,MAAMyC,WAAW,GAAGD,cAAc,CAAC,CAAC;;IAEpC;IACA,MAAME,QAAQ,GAAG,CAAC,GAAGD,WAAW,CAAC,CAACE,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IACjE,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAElC,iBAAiB,CAAC;IAErDK,gBAAgB,CAAC4B,QAAQ,CAAC;IAC1BV,UAAU,CAAC;MACTC,cAAc,EAAExB,iBAAiB;MACjCyB,cAAc,EAAE,CAAC;MACjBC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC5B,QAAQ,EAAEC,KAAK,EAAEC,iBAAiB,CAAC,CAAC;;EAExC;EACAb,SAAS,CAAC,MAAM;IACd,IAAIiC,cAAc,IAAIF,QAAQ,GAAG,CAAC,EAAE;MAClC,MAAMiB,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BjB,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMmB,YAAY,CAACF,OAAO,CAAC;IACpC,CAAC,MAAM,IAAIf,cAAc,IAAIF,QAAQ,KAAK,CAAC,EAAE;MAC3CG,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACD,cAAc,EAAEF,QAAQ,CAAC,CAAC;EAE9B,MAAMoB,kBAAkB,GAAIC,MAAM,IAAK;IACrC,IAAI,CAAC7B,YAAY,EAAE;MACjBD,iBAAiB,CAAC8B,MAAM,CAAC;IAC3B;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIhC,cAAc,KAAK,IAAI,EAAE;IAE7B,MAAMiC,eAAe,GAAGrC,aAAa,CAACE,oBAAoB,CAAC;IAC3D,MAAMoC,OAAO,GAAGlC,cAAc,KAAKiC,eAAe,CAACE,aAAa;IAChE9B,YAAY,CAAC6B,OAAO,CAAC;IACrB/B,eAAe,CAAC,IAAI,CAAC;;IAErB;IACAY,UAAU,CAACqB,IAAI,KAAK;MAClB,GAAGA,IAAI;MACPnB,cAAc,EAAEiB,OAAO,GAAGE,IAAI,CAACnB,cAAc,GAAG,CAAC,GAAGmB,IAAI,CAACnB,cAAc;MACvEC,YAAY,EAAE,CAACgB,OAAO,GAAGE,IAAI,CAAClB,YAAY,GAAG,CAAC,GAAGkB,IAAI,CAAClB;IACxD,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIgB,OAAO,EAAE;MACX,MAAMG,QAAQ,GAAG/B,kBAAkB,GAAG,CAAC;MACvCC,qBAAqB,CAAC8B,QAAQ,CAAC;MAE/B,IAAIA,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;QACtB5B,eAAe,CAAC,IAAI,CAAC;QACrBmB,UAAU,CAAC,MAAMnB,eAAe,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAChD;IACF,CAAC,MAAM;MACLF,qBAAqB,CAAC,CAAC,CAAC;IAC1B;IACA;IACJ,aAAAnB,OAAA;MAAKkD,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/B,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QAC9D,MAAMC,UAAU,GAAG3C,cAAc,KAAK,CAAC0C,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC;QAC1D,MAAMxC,SAAS,GAAG6B,eAAe,CAACE,aAAa,KAAK,CAACO,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC;QACxE,oBACExD,OAAA;UAEEkD,SAAS,EAAE,SAASK,UAAU,GAAG,WAAW,GAAG,EAAE,GAAGzC,YAAY,IAAIE,SAAS,GAAG,UAAU,GAAG,EAAE,GAAGF,YAAY,IAAIyC,UAAU,IAAI,CAACvC,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC7JyC,OAAO,EAAEA,CAAA,KAAM,CAAC3C,YAAY,IAAID,iBAAiB,CAAC,CAACyC,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC,CAAE;UAAAL,QAAA,gBAExEnD,OAAA;YAAMkD,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEO,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGL,GAAG;UAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrE/D,OAAA;YAAMkD,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEN,eAAe,CAACQ,GAAG;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GALtDV,GAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;IACN;;IAEI;IACAvB,UAAU,CAAC,MAAM;MACf,IAAI9B,oBAAoB,GAAGF,aAAa,CAACwD,MAAM,GAAG,CAAC,EAAE;QACnDrD,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;QACjDG,iBAAiB,CAAC,IAAI,CAAC;QACvBE,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,MAAM;QACL;QACAV,cAAc,CAACqB,OAAO,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuC,cAAc,GAAItB,MAAM,IAAK;IACjC,IAAI,CAAC7B,YAAY,EAAE;MACjB,OAAOF,cAAc,KAAK+B,MAAM,GAAG,UAAU,GAAG,EAAE;IACpD;IAEA,IAAIA,MAAM,KAAKnC,aAAa,CAACE,oBAAoB,CAAC,CAACqC,aAAa,EAAE;MAChE,OAAO,SAAS;IAClB;IAEA,IAAInC,cAAc,KAAK+B,MAAM,IAAI,CAAC3B,SAAS,EAAE;MAC3C,OAAO,OAAO;IAChB;IAEA,OAAO,EAAE;EACX,CAAC;EAED,MAAM6B,eAAe,GAAGrC,aAAa,CAACE,oBAAoB,CAAC;EAE3D,IAAIF,aAAa,CAACwD,MAAM,KAAK,CAAC,EAAE;IAC9B,oBACEhE,OAAA;MAAKkD,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BnD,OAAA;QAAKkD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCnD,OAAA;UAAKkD,SAAS,EAAC;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC/D,OAAA;UAAAmD,QAAA,EAAIjD,QAAQ,KAAK,SAAS,GAAG,sBAAsB,GAAG;QAA8B;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzF/D,OAAA;UAAQkD,SAAS,EAAC,aAAa;UAACO,OAAO,EAAEnD,MAAO;UAAA6C,QAAA,EAC7CjD,QAAQ,KAAK,SAAS,GAAG,cAAc,GAAG;QAAqB;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE/D,OAAA;IAAKkD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC5B3B,cAAc,iBACbxB,OAAA,CAACR,KAAK;MACJ0E,OAAO,EACLhE,QAAQ,KAAK,SAAS,GAClB,+BAA+B,GAC/B,sBACL;MACDiE,KAAK,EAAE7C,QAAS;MAChB8C,OAAO,EAAEA,CAAA,KAAM3C,iBAAiB,CAAC,KAAK;IAAE;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACF,EAEA3C,YAAY,iBACXpB,OAAA;MAAKkD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BjD,QAAQ,KAAK,SAAS,GACnB,oBAAoBgB,kBAAkB,4BAA4B,GAClE,+BAA+BA,kBAAkB;IAAmB;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CACN,eAED/D,OAAA;MAAKkD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnD,OAAA;QAAQkD,SAAS,EAAC,aAAa;QAACO,OAAO,EAAEnD,MAAO;QAAA6C,QAAA,GAAC,SAC7C,EAACjD,QAAQ,KAAK,SAAS,GAAG,MAAM,GAAG,SAAS;MAAA;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACT/D,OAAA;QAAKkD,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BjD,QAAQ,KAAK,SAAS,GAAG,UAAU,GAAG,QAAQ,EAAC,GAAC,EAACQ,oBAAoB,GAAG,CAAC,EAAC,GAAC,EAACR,QAAQ,KAAK,SAAS,GAAG,IAAI,GAAG,SAAS,EAAC,GAAC,EAACM,aAAa,CAACwD,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1I,CAAC,eACN/D,OAAA;QAAKkD,SAAS,EAAC,YAAY;QAAAC,QAAA,GACxBhD,KAAK,KAAK,UAAU,IAAI,IAAI,EAC5BA,KAAK,KAAK,cAAc,IAAI,IAAI,EAChCA,KAAK,KAAK,UAAU,IAAI,IAAI,EAC5BA,KAAK,CAACkE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGnE,KAAK,CAACmC,KAAK,CAAC,CAAC,CAAC;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/D,OAAA;MAAKkD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCnD,OAAA;QAAIkD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEN,eAAe,CAAC0B;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE7D/D,OAAA;QAAKkD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAEvC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UAC9D,MAAMC,UAAU,GAAG3C,cAAc,KAAK,CAAC0C,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC;UAC1D,MAAMxC,SAAS,GAAG6B,eAAe,CAACE,aAAa,KAAK,CAACO,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC;UACxE,oBACExD,OAAA;YAEEkD,SAAS,EAAE,SAASK,UAAU,GAAG,WAAW,GAAG,EAAE,GAAGzC,YAAY,IAAIE,SAAS,GAAG,UAAU,GAAG,EAAE,GAAGF,YAAY,IAAIyC,UAAU,IAAI,CAACvC,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC7JyC,OAAO,EAAEA,CAAA,KAAM,CAAC3C,YAAY,IAAID,iBAAiB,CAAC,CAACyC,GAAG,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC,CAAE;YAAAL,QAAA,gBAExEnD,OAAA;cAAMkD,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEO,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGL,GAAG;YAAC;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrE/D,OAAA;cAAMkD,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEN,eAAe,CAACQ,GAAG;YAAC;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GALtDV,GAAG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAML,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGE/D,OAAA;QACEkD,SAAS,EAAC,eAAe;QACzBO,OAAO,EAAEb,YAAa;QACtB4B,QAAQ,EAAE5D,cAAc,KAAK,IAAI,IAAIE,YAAa;QAAAqC,QAAA,EAEjDjD,QAAQ,KAAK,SAAS,GAAG,eAAe,GAAG;MAAyB;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/D,OAAA;MAAKkD,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BnD,OAAA;QAAKkD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BjD,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,OAAO,EAAC,IAAE,EAACgB,kBAAkB;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxD,EAAA,CA3OIN,IAAI;AAAAwE,EAAA,GAAJxE,IAAI;AA6OV,eAAeA,IAAI;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}